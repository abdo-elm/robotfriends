{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","map","user","i","emails","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACC,sBAAKC,UAAU,qDAAf,UACA,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,aACrB,gCACE,mCAAOF,KACP,4BAAKC,WCeOK,EApBC,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACV,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGC,QAHZD,SCKTE,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKX,UAAU,MAAf,SACC,uBACAA,UAAU,oCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCEI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACIJ,EAAMK,YCqBGC,E,kDAtBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAQlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAI5B,WACC,OAAIG,KAAKJ,MAAMC,SACP,2DAEDG,KAAKX,MAAMK,a,GAlBOQ,aC4CZC,G,wDAvCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb3C,EAAKX,MAAQ,CACZnB,OAAQ,GACRM,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKX,SAAS,CAAExB,OAAQmC,S,oBAO1C,WAAU,IAAD,EAC+BZ,KAAKJ,MAA7BnB,EADP,EACOA,OAAQM,EADf,EACeA,YACb8B,EAAiBpC,EAAOqC,QAAO,SAAAC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQvC,EAAOyC,OAGlB,sBAAK7C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAAQoC,WAPd,6C,GAzBUX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAEjDX,M","file":"static/js/main.7829bfce.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5'> \r\n\t\t<img alt='photos' src={`https://robohash.org/${id}7amiiid`}/>\r\n\t\t<div>\r\n\t\t  <h2> { name }</h2>\r\n\t\t  <p>{ email }</p>\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ Robots }) => {\r\n    return (\r\n\t    <div>\r\n\t\t\t    { \r\n\t\t\t      Robots.map((user, i) => {\r\n\t                return (\r\n\t                  <Card\r\n\t\t                 key={i} \r\n\t\t                 id={Robots[i].id} \r\n\t\t                 name={Robots[i].name} \r\n\t\t                 email={Robots[i].emails}\r\n\t                   />\r\n\t                );\r\n\t\t\t    })\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n} \r\n\r\n\r\n export default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-green'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='search robots' \r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n return (\r\n \t<div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n \t   {props.children}\r\n \t</div>\r\n \t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t\tcomponentDidCatch(error, info) {\r\n\t\t\tthis.setState({ hasError: true})\r\n\t\t}\r\n\t\t\r\n\r\n\trender () {\r\n\t\tif (this.state.hasError) {\r\n\t\t return <h1> Oooops. that is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tRobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => {this.setState({ Robots: users })});\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t  this.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\nrender() {\r\n        const { Robots, searchfield } = this.state;\r\n\t    const filteredRobots = Robots.filter(robot => {\r\n      \treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n      })\r\n\t    return !Robots.length ?\r\n\t      \t<h1>Loading</h1> :\r\n\t      \t(\r\n\t\t<div className='tc'>\r\n\t\t  <h1 className='f1'>RobotFiends</h1>\r\n\t\t  <SearchBox searchChange={this.onSearchChange}/>\r\n\t\t  <Scroll>\r\n\t\t  <ErrorBoundry>\r\n\t\t  <CardList Robots={filteredRobots}/>\r\n\t\t  </ErrorBoundry>\r\n\t\t  </Scroll> \r\n\t\t</div>\r\n\t);\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}